--- test_crypt.sh.orig	2022-07-26 18:19:36.000000000 +0800
+++ test_crypt.sh	2023-08-25 07:17:42.000000000 +0800
@@ -9,10 +9,10 @@
 	if test -n "$6"; then opt="$6"; else opt="-qptA"; fi
 	echo "#Validating enc/decryption $eng $alg $othargs"
 	cp -p $file.enc $file.enc.old 2>/dev/null
-	echo $VG ./dd_rescue $opt -L ./libddr_crypt.so=enc$eng:weakrnd:alg=$alg:$keyargs$othargs $file $file.enc 
-	$VG ./dd_rescue $opt -L ./libddr_crypt.so=enc$eng:weakrnd:alg=$alg:$keyargs$othargs $file $file.enc || return 1
-	echo $VG ./dd_rescue $opt -L ./libddr_crypt.so=dec$eng:weakrnd:alg=$alg$othargs $file.enc $file.cmp 
-	$VG ./dd_rescue $opt -L ./libddr_crypt.so=dec$eng:weakrnd:alg=$alg$othargs $file.enc $file.cmp || return 2
+	echo $VG ./dd_rescue $opt -L ./libddr_crypt.dylib=enc$eng:weakrnd:alg=$alg:$keyargs$othargs $file $file.enc 
+	$VG ./dd_rescue $opt -L ./libddr_crypt.dylib=enc$eng:weakrnd:alg=$alg:$keyargs$othargs $file $file.enc || return 1
+	echo $VG ./dd_rescue $opt -L ./libddr_crypt.dylib=dec$eng:weakrnd:alg=$alg$othargs $file.enc $file.cmp 
+	$VG ./dd_rescue $opt -L ./libddr_crypt.dylib=dec$eng:weakrnd:alg=$alg$othargs $file.enc $file.cmp || return 2
 	cmp $file $file.cmp || return 3
 }
 
@@ -70,9 +70,9 @@
 enc_dec_compare_keys dd_rescue AES192-ECB keygen:ivgen "" "" "-qptAr"
 # Appending (CTR, ECB only when block-aligned)
 enc_dec_compare_keys dd_rescue AES192-CTR
-run_ddr -qAx -L ./libddr_crypt.so=enc:weakrnd:alg=AES192-CTR:keysfile:ivsfile dd_rescue dd_rescue.enc || exit 1
+run_ddr -qAx -L ./libddr_crypt.dylib=enc:weakrnd:alg=AES192-CTR:keysfile:ivsfile dd_rescue dd_rescue.enc || exit 1
 cat dd_rescue dd_rescue > dd_rescue2
-run_ddr -qAp -L ./libddr_crypt.so=dec:weakrnd:alg=AES192-CTR:keysfile:ivsfile dd_rescue.enc dd_rescue.cmp || exit 2
+run_ddr -qAp -L ./libddr_crypt.dylib=dec:weakrnd:alg=AES192-CTR:keysfile:ivsfile dd_rescue.enc dd_rescue.cmp || exit 2
 cmp dd_rescue.cmp dd_rescue2 || exit 3
 rm dd_rescue2
 
@@ -103,13 +103,13 @@
 if test "$HAVE_LZO" = "1"; then
 echo "# *** Plugin chains ... ***"
 SHA256SUM=`type -p sha256sum`
-run_ddr -pqt -L ./libddr_hash.so=sha256:outnm=,./libddr_lzo.so=compr,./libddr_hash.so=sha256:output,./libddr_crypt.so=enc:AES192-CTR:keygen:ivgen:weakrnd:keysfile:ivsfile,./libddr_hash.so=sha256:outnm= dd_rescue3 dd_rescue3.enc || exit 1
+run_ddr -pqt -L ./libddr_hash.dylib=sha256:outnm=,./libddr_lzo.dylib=compr,./libddr_hash.dylib=sha256:output,./libddr_crypt.dylib=enc:AES192-CTR:keygen:ivgen:weakrnd:keysfile:ivsfile,./libddr_hash.dylib=sha256:outnm= dd_rescue3 dd_rescue3.enc || exit 1
 if test -n "$SHA256SUM"; then
 sha256sum -c CHECKSUMS.sha256 || exit 4
 else
 echo "WARNING: Cant run sha256sum, binary not found"
 fi
-run_ddr -pqt -L ./libddr_hash.so=sha256:chknm,./libddr_crypt.so=AES192-CTR:weakrnd:dec:keysfile:ivsfile,./libddr_lzo.so=decompr,./libddr_hash.so=sha256:outnm dd_rescue3.enc dd_rescue3.cmp
+run_ddr -pqt -L ./libddr_hash.dylib=sha256:chknm,./libddr_crypt.dylib=AES192-CTR:weakrnd:dec:keysfile:ivsfile,./libddr_lzo.dylib=decompr,./libddr_hash.dylib=sha256:outnm dd_rescue3.enc dd_rescue3.cmp
 if test -n "$SHA256SUM"; then
 sha256sum -c CHECKSUMS.sha256 || exit 4
 fi

--- test_lzo_fuzz.sh.orig	2023-02-24 05:51:27.000000000 +0800
+++ test_lzo_fuzz.sh	2023-08-25 07:17:55.000000000 +0800
@@ -18,8 +18,8 @@
 			exit 1
 		fi
 	fi
-	echo ./dd_rescue -tL ./libddr_lzo.so$PAR dd_rescue.lzo dd_rescue.cmp
-	./dd_rescue -tL ./libddr_lzo.so$PAR dd_rescue.lzo dd_rescue.cmp
+	echo ./dd_rescue -tL ./libddr_lzo.dylib$PAR dd_rescue.lzo dd_rescue.cmp
+	./dd_rescue -tL ./libddr_lzo.dylib$PAR dd_rescue.lzo dd_rescue.cmp
 	RC=$?
 	if test $RC -lt $ERC -o $RC -gt $ERCM; then echo "Unexpected exit value $RC (exp: $ERC-$ERCM)"; exit 2; fi
 	if test $RC -ge 128; then
@@ -36,7 +36,7 @@
 
 ./fuzz_lzo dd_rescue dd_rescue.lzo
 $LZOP -vl dd_rescue.lzo
-./dd_rescue -L ./libddr_lzo.so dd_rescue.lzo /dev/null
+./dd_rescue -L ./libddr_lzo.dylib dd_rescue.lzo /dev/null
 
 # Main tests ...
 test_fuzz 0 0 "" 0 -m3

--- test_lzo.sh.orig	2015-04-15 16:56:38.000000000 +0800
+++ test_lzo.sh	2023-08-25 07:18:07.000000000 +0800
@@ -6,7 +6,7 @@
 {
 	test -n "$LZOP" || return
 	echo "*** Test dd_r/lzop $1 ($2)"
-	./dd_rescue -qATL ./libddr_lzo.so=benchmark:algo=$2:compress $1 $1.ddr.lzo || exit 1
+	./dd_rescue -qATL ./libddr_lzo.dylib=benchmark:algo=$2:compress $1 $1.ddr.lzo || exit 1
 	$LZOP -d $1.ddr.lzo || exit 2
 	cmp $1.ddr $1 || exit 3
 	rm $1.ddr.lzo $1.ddr
@@ -17,7 +17,7 @@
 	test -n "$LZOP" || return
 	echo "*** Test lzop/dd_r $1 ($2)"
 	$LZOP $2 $1 -o $1.lzop.lzo || exit 4
-	./dd_rescue -qATL ./libddr_lzo.so=benchmark:decompress $1.lzop.lzo $1.lzop || exit 5
+	./dd_rescue -qATL ./libddr_lzo.dylib=benchmark:decompress $1.lzop.lzo $1.lzop || exit 5
 	cmp $1.lzop $1 || exit 6
 	rm $1.lzop $1.lzop.lzo
 }
@@ -25,9 +25,9 @@
 compress_ddr_ddr_and_compare()
 {
 	echo "*** Test dd_r/dd_r $1 ($2)"
-	./dd_rescue -qATL ./libddr_lzo.so=benchmark:algo=$2:compress $1 $1.ddr.lzo || exit 7
+	./dd_rescue -qATL ./libddr_lzo.dylib=benchmark:algo=$2:compress $1 $1.ddr.lzo || exit 7
 	#$LZOP -t $1.ddr.lzo || exit 8
-	./dd_rescue -qATL ./libddr_lzo.so=benchmark:decompress $1.ddr.lzo $1.ddr || exit 8
+	./dd_rescue -qATL ./libddr_lzo.dylib=benchmark:decompress $1.ddr.lzo $1.ddr || exit 8
 	cmp $1.ddr $1 || exit 9
 	rm $1.ddr.lzo $1.ddr
 }
