# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           python 1.0
PortGroup           github 1.0

name                py-qtpy

categories-append   devel
supported_archs     noarch
platforms           {darwin any}
license             MIT
maintainers         {reneeotten @reneeotten} openmaintainer

# Usage of build_arch is correct here.
if {${build_arch} ni [list ppc ppc64]} {
    github.setup    spyder-ide qtpy 2.4.1 v
    revision        0
    description     Abstraction layer for PyQt5/PyQt6/PySide2/PySide6
    long_description \
                    Provides an uniform layer to support PyQt5, PyQt6, \
                    PySide2, and PySide6 with a single codebase.

    checksums       rmd160  0789194dbee98718bd037e54525ebb12510222cc \
                    sha256  e5f3ceaf3465b453f71cc0248fc85116ae5b3dfd76cbfd491409eb345a9f9df2 \
                    size    67984

    python.versions 38 39 310 311 312

} else {
    github.setup    spyder-ide qtpy 1.11.3 v
    revision        0
    description     Abstraction layer for PyQt4/PySide
    long_description \
                    Provides an uniform layer to support PyQt4 \
                    and PySide with a single codebase.

    checksums       rmd160  41115ac22fbd547d86ecd37476e1be82562caaa6 \
                    sha256  eae5c5f11acd85b0c35cd39656e093fb1c0bf20fc5176a0010d466405788c5f6 \
                    size    39447

    # At the moment py-sip4 prevents using python311+
    python.versions 27 38 39 310

    livecheck.type  none
}

github.tarball_from archive

if {${name} ne ${subport}} {
    if {${configure.build_arch} ni [list ppc ppc64]} {
        # This is for current version of py-qtpy
        depends_lib-append \
                    port:py${python.version}-packaging

        depends_test-append \
                    port:py${python.version}-pytest-qt
    } else {
        # This is for a legacy Qt4-compatible version
        python.pep517   no

        depends_build-append \
                    port:py${python.version}-setuptools

        depends_test-append \
                    port:py${python.version}-pytest \
                    port:py${python.version}-mock

        test.cmd    py.test-${python.branch}
        test.target
        test.env    PYTHONPATH=${worksrcpath}/build/lib
    }

    test.run        yes

    post-destroot {
        set docdir ${prefix}/share/doc/${subport}
        xinstall -d ${destroot}${docdir}
        xinstall -m 0644 -W ${worksrcpath} LICENSE.txt ${destroot}${docdir}
    }

    notes "QtPy needs one of the following backends to be installed on your system:\
        PyQt6, PyQt5, PyQt4, PySide6, PySide2 or PySide. If multiple backends are\
        available, PyQt5 will be used unless you set the QT_API environment variable."

    # if no backend is installed, it is impossible to run the tests
    # also append a warning about this to the notes
    if {[catch {set installed [lindex [registry_active py${python.version}-pyqt6] 0]}] &&
        [catch {set installed [lindex [registry_active py${python.version}-pyqt5] 0]}] &&
        [catch {set installed [lindex [registry_active py${python.version}-pyqt4] 0]}] &&
        [catch {set installed [lindex [registry_active py${python.version}-pyside6] 0]}] &&
        [catch {set installed [lindex [registry_active py${python.version}-pyside2] 0]}] &&
        [catch {set installed [lindex [registry_active py${python.version}-pyside] 0]}]} {
            test.run        no
            notes-append    "*** WARNING: currently none of the required backends is installed! ***"
        }
}
