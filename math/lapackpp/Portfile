# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           cmake 1.1
PortGroup           github 1.0
#PortGroup           linear_algebra 1.0

github.setup        icl-utk-edu lapackpp 2023.01.00 v
revision            0
categories          math science
license             BSD
maintainers         {@barracuda156 gmail.com:vital.had} openmaintainer
description         C++ API for the LAPACK
long_description    {*}${description}
checksums           rmd160  92ea76716358e82fa32d7e98f5eb8f5ecd8d1bbe \
                    sha256  525d6244fb06c114dac6e83efb60cf7b4cebfe823e049f83f873f51dbb494b10 \
                    size    489890
github.tarball_from archive

depends_lib-append  port:blaspp

set py_ver          3.11
set py_ver_nodot    [string map {. {}} ${py_ver}]
configure.python    ${prefix}/bin/python${py_ver}

# post-patch {
#     reinplace "s,/usr/bin/env python3,${configure.python}," ${worksrcpath}/configure.py
#     reinplace "s,/usr/bin/env python3,${configure.python}," ${worksrcpath}/test/run_tests.py
#     reinplace "s,python3,${configure.python}," ${worksrcpath}/test/CMakeLists.txt

#    if {[variant_isset openblas]} {
#        reinplace "s,<cblas.h>,<cblas_openblas.h>,g" ${worksrcpath}/config/cblas.cc
#        reinplace "s,<cblas.h>,<cblas_openblas.h>," ${worksrcpath}/config/openblas_version.cc
#        reinplace "s,<cblas.h>,<cblas_openblas.h>,g" ${worksrcpath}/test/cblas_wrappers.hh
#    }
# }

compiler.cxx_standard   2017
compiler.openmp_version 3.0

        configure.args-append \
                    -DBLA_VENDOR=Apple

# pre-configure {
#     if {[variant_isset accelerate]} {
#         veclibfort  no
#         configure.args-append \
#                     -DLAPACK_LIBRARIES="-lLAPACK"
#     } elseif {[variant_isset openblas]} {
#         configure.args-append \
#                     -DLAPACK_LIBRARIES="-lopenblas"
#     }
# }

configure.args-append \
                    -DBUILD_SHARED_LIBS:BOOL=ON \
                    -DBUILD_TESTING:BOOL=ON \
                    -Dgpu_backend=none \
                    -Duse_openmp:BOOL=ON

if {[string match *clang* ${configure.compiler}]} {
    configure.ldflags-append \
                    -L${prefix}/lib/libomp \
                    -lomp
}
