--- configure.orig	2022-03-28 20:27:36.000000000 +0800
+++ configure	2022-04-26 06:49:10.000000000 +0800
@@ -13256,6 +13256,7 @@
     mkexe="$mkexe -Wl,-no_compact_unwind";
     $as_echo "#define HAS_ARCH_CODE32 1" >>confdefs.h
  ;; #(
+ 
   *,*-*-haiku*) :
     mathlib="" ;; #(
   *,*-*-cygwin*) :
@@ -14087,7 +14088,7 @@
   case $host in #(
   *-apple-darwin*) :
     mksharedlib="$CC -shared \
-                   -flat_namespace -undefined suppress -Wl,-no_compact_unwind \
+                   -flat_namespace -undefined suppress -Wl,-no_compact_unwind -read_only_relocs suppress \
                    \$(LDFLAGS)"
       supports_shared_libraries=true ;; #(
   *-*-mingw32) :
@@ -14169,6 +14170,10 @@
     natdynlink=true ;; #(
   x86_64-*-darwin*) :
     natdynlink=true ;; #(
+  powerpc-*-darwin*) :
+    natdynlink=true ;; #(
+  powerpc64-*-darwin*) :
+    natdynlink=true ;; #(
   s390x*-*-linux*) :
     natdynlink=true ;; #(
   powerpc*-*-linux*) :
@@ -14328,9 +14333,9 @@
   powerpc*-*-linux*) :
     arch=power; if $arch64; then :
   model=ppc64
-else
+    else
   model=ppc
-fi; system=elf ;; #(
+    fi; system=elf ;; #(
   s390x*-*-linux*) :
     arch=s390x; model=z10; system=elf ;; #(
   # expected to match "gnueabihf" as well as "musleabihf"
@@ -14388,6 +14393,12 @@
     arch=arm64; system=macosx ;; #(
   x86_64-*-darwin*) :
     arch=amd64; system=macosx ;; #(
+  powerpc*-*-darwin*) :
+    arch=power; if $arch64; then :
+  model=ppc64
+    else
+  model=ppc
+    fi; system=rhapsody ;; #(
   x86_64-*-mingw32) :
     arch=amd64; system=mingw64 ;; #(
   aarch64-*-linux*) :
@@ -14524,6 +14535,10 @@
   case "$arch,$cc_basename,$system,$model" in #(
   amd64,*gcc*,macosx,*) :
     PACKLD_FLAGS=' -arch x86_64' ;; #(
+  power,*gcc*,rhapsody,ppc) :
+    PACKLD_FLAGS=' -arch ppc' ;; #(
+  power,*gcc*,rhapsody,ppc64) :
+    PACKLD_FLAGS=' -arch ppc64' ;; #(
   power,*gcc*,elf,ppc) :
     PACKLD_FLAGS=' -m elf32ppclinux' ;; #(
   power,*gcc*,elf,ppc64) :
@@ -14612,7 +14627,7 @@
     default_as="${toolpref}as" ;; #(
   *) :
      ;;
-esac ;; #(
+    esac ;; #(
   i686-pc-windows,*) :
     default_as="ml -nologo -coff -Cp -c -Fo"
     default_aspp="$default_as" ;; #(
@@ -14622,6 +14637,9 @@
   *-*-darwin*,clang-*) :
     default_as="$default_as -Wno-trigraphs"
     default_aspp="$default_as" ;; #(
+  *-*-darwin*,gcc-*) :
+    default_as="$default_as"
+    default_aspp="$default_as" ;; #(
   *) :
      ;;
 esac
@@ -14982,7 +15000,7 @@
 case $host in #(
   *-*-windows) :
     has_monotonic_clock=true ;; #(
-  *-apple-darwin*) :
+  *-apple-darwin*|*-*-rhapsody*) :
 
     for ac_func in mach_timebase_info mach_absolute_time
 do :
@@ -16654,7 +16672,7 @@
 $as_echo_n "checking whether stack overflows can be detected... " >&6; }
 
 case $arch,$system in #(
-  i386,linux_elf|amd64,linux|amd64,macosx \
+  i386,linux_elf|amd64,linux|power,rhapsody|amd64,macosx|i386,macosx \
     |amd64,openbsd|i386,bsd_elf|arm64,linux|arm64,macosx) :
     $as_echo "#define HAS_STACK_OVERFLOW_DETECTION 1" >>confdefs.h
 
@@ -16895,7 +16913,7 @@
 # correctly enabled
 
 case $host_os in
-        darwin* | hpux* | linux* | osf* | solaris*)
+        darwin* | rhapsody* | hpux* | linux* | osf* | solaris*)
         ax_pthread_check_macro="_REENTRANT"
         ;;
 
