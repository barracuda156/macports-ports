--- configure.orig	2022-03-28 20:27:36.000000000 +0800
+++ configure	2022-04-28 13:26:36.000000000 +0800
@@ -13254,7 +13254,9 @@
 case $cc_basename,$host in #(
   *,*-*-darwin*) :
     mkexe="$mkexe -Wl,-no_compact_unwind";
+    $as_echo "#ifndef __PIC__" >>confdefs.h
     $as_echo "#define HAS_ARCH_CODE32 1" >>confdefs.h
+    $as_echo "#endif" >>confdefs.h
  ;; #(
   *,*-*-haiku*) :
     mathlib="" ;; #(
@@ -14086,9 +14088,7 @@
 if test x"$enable_shared" != "xno"; then :
   case $host in #(
   *-apple-darwin*) :
-    mksharedlib="$CC -shared \
-                   -flat_namespace -undefined suppress -Wl,-no_compact_unwind \
-                   \$(LDFLAGS)"
+    mksharedlib="$CC -shared -flat_namespace -undefined suppress -read_only_relocs suppress -Wl,-no_compact_unwind \$(LDFLAGS)"
       supports_shared_libraries=true ;; #(
   *-*-mingw32) :
     mksharedlib='$(FLEXLINK)'
@@ -14169,6 +14169,8 @@
     natdynlink=true ;; #(
   x86_64-*-darwin*) :
     natdynlink=true ;; #(
+  powerpc*-*-darwin*) :
+    natdynlink=true ;; #(
   s390x*-*-linux*) :
     natdynlink=true ;; #(
   powerpc*-*-linux*) :
@@ -14328,9 +14330,9 @@
   powerpc*-*-linux*) :
     arch=power; if $arch64; then :
   model=ppc64
-else
+    else
   model=ppc
-fi; system=elf ;; #(
+    fi; system=elf ;; #(
   s390x*-*-linux*) :
     arch=s390x; model=z10; system=elf ;; #(
   # expected to match "gnueabihf" as well as "musleabihf"
@@ -14388,6 +14390,14 @@
     arch=arm64; system=macosx ;; #(
   x86_64-*-darwin*) :
     arch=amd64; system=macosx ;; #(
+  powerpc*-*-darwin*) :
+    arch=power; if $arch64; then :
+  model=ppc64
+    else
+  model=ppc
+    fi; system=rhapsody ;; #(
+  powerpc-*-rhapsody*) :
+    arch=power; model=ppc; system=rhapsody ;; #(
   x86_64-*-mingw32) :
     arch=amd64; system=mingw64 ;; #(
   aarch64-*-linux*) :
@@ -14399,8 +14409,7 @@
   x86_64-*-cygwin*) :
     arch=amd64; system=cygwin ;; #(
   riscv64-*-linux*) :
-    arch=riscv; model=riscv64; system=linux
- ;; #(
+    arch=riscv; model=riscv64; system=linux ;; #(
   *) :
      ;;
 esac
@@ -14524,6 +14533,10 @@
   case "$arch,$cc_basename,$system,$model" in #(
   amd64,*gcc*,macosx,*) :
     PACKLD_FLAGS=' -arch x86_64' ;; #(
+  power,*gcc*,rhapsody,ppc) :
+    PACKLD_FLAGS=' -arch ppc' ;; #(
+  power,*gcc*,rhapsody,ppc64) :
+    PACKLD_FLAGS=' -arch ppc64' ;; #(
   power,*gcc*,elf,ppc) :
     PACKLD_FLAGS=' -m elf32ppclinux' ;; #(
   power,*gcc*,elf,ppc64) :
@@ -14622,6 +14635,9 @@
   *-*-darwin*,clang-*) :
     default_as="$default_as -Wno-trigraphs"
     default_aspp="$default_as" ;; #(
+  *-*-darwin*,gcc-*) :
+    default_as="$default_as"
+    default_aspp="$default_as" ;; #(
   *) :
      ;;
 esac
@@ -16654,8 +16670,7 @@
 $as_echo_n "checking whether stack overflows can be detected... " >&6; }
 
 case $arch,$system in #(
-  i386,linux_elf|amd64,linux|amd64,macosx \
-    |amd64,openbsd|i386,bsd_elf|arm64,linux|arm64,macosx) :
+  i386,linux_elf|amd64,linux|amd64,macosx|power,rhapsody|amd64,openbsd|i386,bsd_elf|arm64,linux|arm64,macosx) :
     $as_echo "#define HAS_STACK_OVERFLOW_DETECTION 1" >>confdefs.h
 
     { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
