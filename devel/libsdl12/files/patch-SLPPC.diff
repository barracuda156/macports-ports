--- src/video/quartz/SDL_QuartzVideo.m.orig	2022-08-01 04:28:40.000000000 +0800
+++ src/video/quartz/SDL_QuartzVideo.m	2022-11-03 08:13:50.000000000 +0800
@@ -141,7 +141,7 @@
 static void QZ_ReleaseDisplayMode(_THIS, const void *moderef)
 {
     /* we only own these references in the 10.6+ API. */
-#if (MAC_OS_X_VERSION_MAX_ALLOWED >= 1060)
+#if (MAC_OS_X_VERSION_MAX_ALLOWED > 1060)
     if (use_new_mode_apis) {
         CGDisplayModeRelease((CGDisplayModeRef) moderef);
     }
@@ -253,7 +253,7 @@
         return;
     }
 
-#if (MAC_OS_X_VERSION_MAX_ALLOWED >= 1060)
+#if (MAC_OS_X_VERSION_MAX_ALLOWED > 1060)
     if (use_new_mode_apis) {
         CGDisplayModeRef vidmode = (CGDisplayModeRef) _mode;
         CFStringRef fmt = CGDisplayModeCopyPixelEncoding(vidmode);
@@ -271,7 +271,7 @@
     }
 #endif
 
-#if (MAC_OS_X_VERSION_MIN_REQUIRED < 1060)
+#if (MAC_OS_X_VERSION_MIN_REQUIRED <= 1060)
     if (!use_new_mode_apis) {
         CFDictionaryRef vidmode = (CFDictionaryRef) _mode;
         CFNumberGetValue (
@@ -304,7 +304,7 @@
 
     use_new_mode_apis = NO;
 
-#if (MAC_OS_X_VERSION_MAX_ALLOWED >= 1060)
+#if (MAC_OS_X_VERSION_MAX_ALLOWED > 1060)
     use_new_mode_apis = IS_SNOW_LEOPARD_OR_LATER(this);
 #endif
 
@@ -324,13 +324,13 @@
     }
 #endif
 
-#if (MAC_OS_X_VERSION_MAX_ALLOWED >= 1060)
+#if (MAC_OS_X_VERSION_MAX_ALLOWED > 1060)
     if (use_new_mode_apis) {
         save_mode = CGDisplayCopyDisplayMode(display_id);
     }
 #endif
 
-#if (MAC_OS_X_VERSION_MIN_REQUIRED < 1060)
+#if (MAC_OS_X_VERSION_MIN_REQUIRED <= 1060)
     if (!use_new_mode_apis) {
         save_mode = CGDisplayCurrentMode(display_id);
     }
@@ -414,13 +414,13 @@
         client_mode_list = NULL;
     }
 
-#if (MAC_OS_X_VERSION_MAX_ALLOWED >= 1060)
+#if (MAC_OS_X_VERSION_MAX_ALLOWED > 1060)
     if (use_new_mode_apis) {
         mode_list = CGDisplayCopyAllDisplayModes(display_id, NULL);
     }
 #endif
 
-#if (MAC_OS_X_VERSION_MIN_REQUIRED < 1060)
+#if (MAC_OS_X_VERSION_MIN_REQUIRED <= 1060)
     if (!use_new_mode_apis) {
         mode_list = CGDisplayAvailableModes(display_id);
     }
@@ -518,13 +518,13 @@
 
 static CGError QZ_SetDisplayMode(_THIS, const void *vidmode)
 {
-#if (MAC_OS_X_VERSION_MAX_ALLOWED >= 1060)
+#if (MAC_OS_X_VERSION_MAX_ALLOWED > 1060)
     if (use_new_mode_apis) {
         return CGDisplaySetDisplayMode(display_id, (CGDisplayModeRef) vidmode, NULL);
     }
 #endif
 
-#if (MAC_OS_X_VERSION_MIN_REQUIRED < 1060)
+#if (MAC_OS_X_VERSION_MIN_REQUIRED <= 1060)
     if (!use_new_mode_apis) {
         return CGDisplaySwitchToMode(display_id, (CFDictionaryRef) vidmode);
     }
@@ -641,7 +641,7 @@
         return NULL;
     }
 
-#if (MAC_OS_X_VERSION_MAX_ALLOWED >= 1060)
+#if (MAC_OS_X_VERSION_MAX_ALLOWED > 1060)
     if (use_new_mode_apis) {
         /* apparently, we have to roll our own now. :/ */
         CFArrayRef mode_list = CGDisplayCopyAllDisplayModes(display_id, NULL);
@@ -665,7 +665,7 @@
     }
 #endif
 
-#if (MAC_OS_X_VERSION_MIN_REQUIRED < 1060)
+#if (MAC_OS_X_VERSION_MIN_REQUIRED <= 1060)
     if (!use_new_mode_apis) {
         boolean_t exact = 0;
         best = CGDisplayBestModeForParameters(display_id, bpp, w, h, &exact);
