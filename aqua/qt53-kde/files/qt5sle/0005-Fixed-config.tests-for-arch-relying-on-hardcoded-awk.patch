From 5bd96debb7d5e8fcbe3af6d2c9afd06dd31f01cc Mon Sep 17 00:00:00 2001
From: Daniel Kettle <initial.dann@gmail.com>
Date: Mon, 14 Aug 2023 11:28:04 -0600
Subject: [PATCH 5/7] Fixed config.tests for arch relying on hardcoded awk;
 Pass  to test. Tested nawk/mawk/gawk on linux amd64 gentoo

---
 qtbase/config.tests/unix/arch.test | 7 ++-----
 qtbase/configure                   | 8 ++------
 2 files changed, 4 insertions(+), 11 deletions(-)

diff --git qtbase/config.tests/unix/arch.test qtbase/config.tests/unix/arch.test
index 7b1c01ce2..7d3683029 100755
--- qtbase/config.tests/unix/arch.test
+++ qtbase/config.tests/unix/arch.test
@@ -7,7 +7,6 @@ OUTDIR=$4
 RESULTFILE=$5
 TARGET=$6
 shift 6
-
 if [ "$TARGET" = "host" ]; then
     VARPREFIX="CFG_HOST"
     PROSUFFIX="_host"
@@ -46,7 +45,6 @@ cd "$OUTDIR/config.tests/arch"
 [ -f Makefile ] && $MAKE distclean >/dev/null 2>&1
 OUTDIR=$OUTDIR "$OUTDIR/bin/qmake" -nocache -spec "$QMKSPEC" "QT_BUILD_TREE=$OUTDIR" "LIBS+=$LFLAGS" "QMAKE_CXXFLAGS+=$CXXFLAGS" "INCLUDEPATH+=$INCLUDEPATH" "CONFIG-=app_bundle" "$SRCDIR/config.tests/arch/arch$PROSUFFIX.pro" >/dev/null 2>&1 || echo "qmake is broken" >&2
 
-
 ARCH=""
 [ "$VERBOSE" = "yes" ] && $MAKE || $MAKE >/dev/null 2>&1
 
@@ -60,10 +58,9 @@ else
     [ "$VERBOSE" = "yes" ] && echo "Unable to determine architecture!"
     exit 2
 fi
-
 if strings - $binary 2>/dev/null | \
-    awk -F: '/\=\=Qt\=magic\=Qt\=\= Architecture/ { print "'$VARPREFIX'_ARCH=\"" $2 "\"" }
-             /\=\=Qt\=magic\=Qt\=\= Sub-architecture/ { print "'$VARPREFIX'_CPUFEATURES=\"" $2 "\"" }' > "$RESULTFILE"
+    $AWK -F: '/==Qt=magic=Qt== Architecture/ { print "'$VARPREFIX'_ARCH=\"" $2 "\"" }
+             /==Qt=magic=Qt== Sub-architecture/ { print "'$VARPREFIX'_CPUFEATURES=\"" $2 "\"" }' > "$RESULTFILE"
 then
     [ "$VERBOSE" = "yes" ] && echo "    Found architecture in binary" && \
         cat "$RESULTFILE"
diff --git qtbase/configure qtbase/configure
index f9ecca414..84f0e2876 100755
--- qtbase/configure
+++ qtbase/configure
@@ -62,7 +62,7 @@ PERL=`$WHICH perl 2>/dev/null`
 
 # find out which awk we want to use, prefer gawk, then nawk, then regular awk
 AWK=
-for e in mawk gawk nawk awk; do
+for e in mawk nawk gawk awk; do
     if "$WHICH" $e >/dev/null 2>&1 && ( $e -f /dev/null /dev/null ) >/dev/null 2>&1; then
         AWK=$e
         break
@@ -3813,7 +3813,6 @@ else
     mv -f $DEVICE_VARS_FILE "$DEVICE_VARS_OUTFILE"
     DEVICE_VARS_FILE="$DEVICE_VARS_OUTFILE"
 fi
-
 #-------------------------------------------------------------------------------
 # Verify makespec
 #-------------------------------------------------------------------------------
@@ -3911,10 +3910,9 @@ compileTest()
 #-------------------------------------------------------------------------------
 # determine the target and host architectures
 #-------------------------------------------------------------------------------
-
 # Use config.tests/arch/arch.pro to have the compiler tell us what the target architecture is
 OUTFILE=$outpath/arch.result
-"$unixtests/arch.test" "$XQMAKESPEC" $OPT_VERBOSE "$relpath" "$outpath" "$OUTFILE" "target" $I_FLAGS $D_FLAGS $L_FLAGS
+AWK=$AWK "$unixtests/arch.test" "$XQMAKESPEC" $OPT_VERBOSE "$relpath" "$outpath" "$OUTFILE" "target" $I_FLAGS $D_FLAGS $L_FLAGS
 if [ $? -eq 0 ]; then
     eval `cat "$OUTFILE"`
 else
@@ -3952,7 +3950,6 @@ fi
 #-------------------------------------------------------------------------------
 # functionality tests
 #-------------------------------------------------------------------------------
-
 # Detect objcopy support
 if [ "$CFG_SEPARATE_DEBUG_INFO" = "yes" ]; then
     if ! compileTest unix/objcopy "objcopy"; then
@@ -4075,7 +4072,6 @@ if [ "${CFG_AVX}" = "auto" ]; then
        CFG_AVX=no
     fi
 fi
-
 # detect avx2 support
 if [ "${CFG_AVX}" = "no" ]; then
     CFG_AVX2=no
